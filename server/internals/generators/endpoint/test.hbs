import request from "supertest";
import logger from "@darekkay/logger";

import axios from "axios";

import app from "../../app";
import {{ camelCase name }}MockResponse from "./__examples__/{{ dashCase name }}.json";

describe("{{ camelCase name }}", () => {
  afterEach(() => {
    logger.setLevel("error");
  });

  test("TODO", async () => {
    const mockedAxios = axios as jest.Mocked<typeof axios>;
    mockedAxios.get.mockResolvedValueOnce({{ camelCase name }}MockResponse);

    return request(app)
      .get("{{ route }}")
      .expect("Content-Type", /json/)
      .expect(200)
      .then((response) => {
        expect(response.body.TODO).toBe("TODO");
      });
  });
});
